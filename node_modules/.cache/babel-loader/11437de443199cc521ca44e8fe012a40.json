{"ast":null,"code":"var _jsxFileName = \"/home/mustafaakgul/Desktop/LoRa React/src/views/pages/authentication/register/RegisterJWT.js\";\nimport React from \"react\";\nimport { Form, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\nimport { Check } from \"react-feather\";\nimport { connect } from \"react-redux\";\nimport { signupWithJWT } from \"../../../../redux/actions/auth/registerActions\";\nimport { history } from \"../../../../history\";\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nclass RegisterJWT extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //console.log(event.target.username.value);\n\n      this.props.onAuth(event.target.userName.value, event.target.email.value, event.target.password.value, event.target.confirm.value);\n      this.props.history.push(\"/\");\n    };\n\n    this.state = {\n      value: '',\n      confirmDirty: false,\n      email: \"\",\n      password: \"\",\n      userName: \"\",\n      confirm: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  /*state = {\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    confirmPass: \"\"\n  }*/\n\n  /*handleRegister = e => {\n    e.preventDefault()\n    this.props.signupWithJWT(\n      this.state.email,\n      this.state.password,\n      this.state.name\n    )\n          <Form action=\"/\" onSubmit={this.handleRegister}>\n  }*/\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      action: \"/\",\n      onSubmit: event => this.handleSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"userName\",\n      placeholder: \"User Name\",\n      required: true,\n      value: this.state.name,\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      required: true,\n      value: this.state.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Email\")), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      required: true,\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Password\")), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"confirm\",\n      placeholder: \"Confirm Password\",\n      required: true,\n      value: this.state.confirmPass,\n      onChange: e => this.setState({\n        confirmPass: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Confirm Password\")), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      icon: /*#__PURE__*/React.createElement(Check, {\n        className: \"vx-icon\",\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }),\n      label: \" I accept the terms & conditions.\",\n      defaultChecked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button.Ripple, {\n      color: \"primary\",\n      outline: true,\n      onClick: () => {\n        history.push(\"/pages/login\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Button.Ripple, {\n      color: \"primary\",\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \"Register\")));\n  }\n\n}\n/*const mapStateToProps = state => {\n  return {\n    values: state.auth.register\n  }\n}\nexport default connect(mapStateToProps, { signupWithJWT })(RegisterJWT)*/\n\n\nconst WrappedRegisterJWT = RegisterJWT;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegisterJWT);","map":{"version":3,"sources":["/home/mustafaakgul/Desktop/LoRa React/src/views/pages/authentication/register/RegisterJWT.js"],"names":["React","Form","FormGroup","Input","Label","Button","Checkbox","Check","connect","signupWithJWT","history","NavLink","actions","RegisterJWT","Component","constructor","props","handleSubmit","event","preventDefault","onAuth","target","userName","value","email","password","confirm","push","state","confirmDirty","bind","render","name","e","setState","confirmPass","WrappedRegisterJWT","mapStateToProps","loading","error","mapDispatchToProps","dispatch","username","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Form, FormGroup, Input, Label, Button } from \"reactstrap\"\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport { Check } from \"react-feather\"\nimport { connect } from \"react-redux\"\nimport { signupWithJWT } from \"../../../../redux/actions/auth/registerActions\"\nimport { history } from \"../../../../history\"\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nclass RegisterJWT extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '', \n      confirmDirty: false,\n      email: \"\",\n      password: \"\",\n      userName: \"\",\n      confirm: \"\"\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /*state = {\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    confirmPass: \"\"\n  }*/\n\n  /*handleRegister = e => {\n    e.preventDefault()\n    this.props.signupWithJWT(\n      this.state.email,\n      this.state.password,\n      this.state.name\n    )\n          <Form action=\"/\" onSubmit={this.handleRegister}>\n  }*/\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n        //console.log(event.target.username.value);\n        this.props.onAuth(event.target.userName.value, event.target.email.value, event.target.password.value, event.target.confirm.value);\n        this.props.history.push(\"/\");\n  }\n\n  render() {\n    return (\n      <Form action=\"/\" onSubmit={(event) => this.handleSubmit(\n        event\n        )}>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"text\"\n            name=\"userName\"\n            placeholder=\"User Name\"\n            required\n            value={this.state.name}\n            onChange={e => this.setState({ name: e.target.value })}\n          />\n          <Label>Name</Label>\n        </FormGroup>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            required\n            value={this.state.email}\n            onChange={e => this.setState({ email: e.target.value })}\n          />\n          <Label>Email</Label>\n        </FormGroup>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            required\n            value={this.state.password}\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <Label>Password</Label>\n        </FormGroup>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"password\"\n            name=\"confirm\"\n            placeholder=\"Confirm Password\"\n            required\n            value={this.state.confirmPass}\n            onChange={e => this.setState({ confirmPass: e.target.value })}\n          />\n          <Label>Confirm Password</Label>\n        </FormGroup>\n        <FormGroup>\n          <Checkbox\n            color=\"primary\"\n            icon={<Check className=\"vx-icon\" size={16} />}\n            label=\" I accept the terms & conditions.\"\n            defaultChecked={true}\n          />\n        </FormGroup>\n        <div className=\"d-flex justify-content-between\">\n          <Button.Ripple\n            color=\"primary\"\n            outline\n            onClick={() => {\n              history.push(\"/pages/login\")\n            }}\n          >\n            Login\n          </Button.Ripple>\n          <Button.Ripple color=\"primary\" type=\"submit\" value=\"Submit\">\n            Register\n          </Button.Ripple>\n        </div>\n      </Form>\n    )\n  }\n}\n/*const mapStateToProps = state => {\n  return {\n    values: state.auth.register\n  }\n}\nexport default connect(mapStateToProps, { signupWithJWT })(RegisterJWT)*/\n\nconst WrappedRegisterJWT = RegisterJWT;\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegisterJWT);"]},"metadata":{},"sourceType":"module"}