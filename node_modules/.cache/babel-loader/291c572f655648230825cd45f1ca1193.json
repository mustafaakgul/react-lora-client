{"ast":null,"code":"var _jsxFileName = \"/home/mustafaakgul/Desktop/LoRa React/src/views/pages/authentication/login/LoginJWT.js\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\";\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\nimport { Mail, Lock, Check } from \"react-feather\";\nimport { loginWithJWT } from \"../../../../redux/actions/auth/loginActions\";\nimport { connect } from \"react-redux\";\nimport { history } from \"../../../../history\";\nimport * as actions from '../store/actions/auth';\n\nclass LoginJWT extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(event.target.username.value);\n      console.log(event.target.password.value);\n      this.props.onAuth(event.target.username.value, event.target.password.value); //this.props.history.push(\"/\"); \n    };\n\n    this.state = {\n      value: '',\n      username: \"admin\",\n      email: \"demo@demo.com\",\n      password: \"demodemo\",\n      remember: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  /*state = {\n    email: \"demo@demo.com\",\n    password: \"demodemo\",\n    remember: false\n  }*/\n\n  /*handleLogin = e => {\n    e.preventDefault()\n    this.props.loginWithJWT(this.state)\n  }\n  <Form action=\"/\" onSubmit={this.handleLogin}>*/\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"pt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      action: \"/\",\n      onSubmit: event => this.handleSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-label-group position-relative has-icon-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"username\",\n      placeholder: \"username\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control-position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Mail, {\n      size: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"Username\")), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-label-group position-relative has-icon-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control-position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Lock, {\n      size: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Password\")), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      icon: /*#__PURE__*/React.createElement(Check, {\n        className: \"vx-icon\",\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }\n      }),\n      label: \"Remember me\",\n      defaultChecked: false,\n      onChange: this.handleRemember,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/pages/forgot-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Forgot Password?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button.Ripple, {\n      color: \"primary\",\n      outline: true,\n      onClick: () => {\n        history.push(\"/pages/register\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(Button.Ripple, {\n      color: \"primary\",\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, \"Login\")))));\n  }\n\n}\n/*const mapStateToProps = state => {\n  return {\n    values: state.auth.login\n  }\n}\nexport default connect(mapStateToProps, { loginWithJWT })(LoginJWT)*/\n\n\nconst WrappedLoginJWT = LoginJWT;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedLoginJWT);","map":{"version":3,"sources":["/home/mustafaakgul/Desktop/LoRa React/src/views/pages/authentication/login/LoginJWT.js"],"names":["React","Link","NavLink","CardBody","FormGroup","Form","Input","Button","Label","Checkbox","Mail","Lock","Check","loginWithJWT","connect","history","actions","LoginJWT","Component","constructor","props","handleSubmit","event","preventDefault","console","log","target","username","value","password","onAuth","state","email","remember","bind","render","e","setState","handleRemember","push","WrappedLoginJWT","mapStateToProps","loading","error","mapDispatchToProps","dispatch","authLogin"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Link, NavLink } from \"react-router-dom\"\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\"\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport { Mail, Lock, Check } from \"react-feather\"\nimport { loginWithJWT } from \"../../../../redux/actions/auth/loginActions\"\nimport { connect } from \"react-redux\"\nimport { history } from \"../../../../history\"\nimport * as actions from '../store/actions/auth';\n\nclass LoginJWT extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      username: \"admin\",\n      email: \"demo@demo.com\",\n      password: \"demodemo\",\n      remember: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /*state = {\n    email: \"demo@demo.com\",\n    password: \"demodemo\",\n    remember: false\n  }*/\n\n  /*handleLogin = e => {\n    e.preventDefault()\n    this.props.loginWithJWT(this.state)\n  }\n  <Form action=\"/\" onSubmit={this.handleLogin}>*/\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(event.target.username.value);\n    console.log(event.target.password.value);\n    this.props.onAuth(event.target.username.value, event.target.password.value);\n    //this.props.history.push(\"/\"); \n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <CardBody className=\"pt-1\">\n          <Form action=\"/\" onSubmit={(event) => this.handleSubmit(\n                    event\n                    )}>\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\n              <Input\n                type=\"username\"\n                placeholder=\"username\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={e => this.setState({ username: e.target.value })}\n                required\n              />\n              <div className=\"form-control-position\">\n                <Mail size={15} />\n              </div>\n              <Label>Username</Label>\n            </FormGroup>\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\n              <Input\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={e => this.setState({ password: e.target.value })}\n                required\n              />\n              <div className=\"form-control-position\">\n                <Lock size={15} />\n              </div>\n              <Label>Password</Label>\n            </FormGroup>\n            <FormGroup className=\"d-flex justify-content-between align-items-center\">\n              <Checkbox\n                color=\"primary\"\n                icon={<Check className=\"vx-icon\" size={16} />}\n                label=\"Remember me\"\n                defaultChecked={false}\n                onChange={this.handleRemember}\n              />\n              <div className=\"float-right\">\n                <Link to=\"/pages/forgot-password\">Forgot Password?</Link>\n              </div>\n            </FormGroup>\n            <div className=\"d-flex justify-content-between\">\n              <Button.Ripple\n                color=\"primary\"\n                outline\n                onClick={() => {\n                  history.push(\"/pages/register\")\n                }}\n              >\n                Register\n              </Button.Ripple>\n              <Button.Ripple color=\"primary\" type=\"submit\" value=\"Submit\">\n                Login\n              </Button.Ripple>\n            </div>\n          </Form>\n        </CardBody>\n      </React.Fragment>\n    )\n  }\n}\n/*const mapStateToProps = state => {\n  return {\n    values: state.auth.login\n  }\n}\nexport default connect(mapStateToProps, { loginWithJWT })(LoginJWT)*/\n\nconst WrappedLoginJWT = LoginJWT; \nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)) \n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps) (WrappedLoginJWT);"]},"metadata":{},"sourceType":"module"}