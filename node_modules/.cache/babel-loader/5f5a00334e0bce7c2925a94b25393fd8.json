{"ast":null,"code":"var _jsxFileName = \"/home/mustafaakgul/Desktop/LoRa React/src/views/tables/aggrid/Aggrid4enddevices.js\";\nimport React from \"react\";\nimport { Card, CardBody, Input, Button, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle } from \"reactstrap\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { ChevronDown } from \"react-feather\";\nimport axios from \"axios\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport ChildMessageRenderer from './childMessageRenderer.jsx';\n\nclass AggridTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rowData: null,\n      paginationPageSize: 20,\n      currenPageSize: \"\",\n      getPageSize: \"\",\n      defaultColDef: {\n        sortable: true,\n        editable: true,\n        resizable: true,\n        suppressMenu: true\n      },\n      frameworkComponents: {\n        childMessageRenderer: ChildMessageRenderer\n      },\n      columnDefs: [{\n        headerName: \"Data\",\n        field: \"lastValue\",\n        width: 225,\n        filter: true,\n        checkboxSelection: true,\n        headerCheckboxSelectionFilteredOnly: true,\n        headerCheckboxSelection: true\n      }, {\n        headerName: \"RSSI\",\n        field: \"rssi\",\n        filter: true,\n        width: 150\n      }, {\n        headerName: \"End Device Name\",\n        field: \"endDeviceName\",\n        filter: true,\n        width: 300,\n        pinned: window.innerWidth > 992 ? \"left\" : false\n      }, {\n        headerName: \"SNR\",\n        field: \"snr\",\n        filter: true,\n        width: 150\n      }, {\n        headerName: \"Communication Status\",\n        field: \"status\",\n        filter: true,\n        width: 300\n      }, {\n        headerName: \"Device EUI\",\n        field: \"dev_eui\",\n        cellRenderer: \"childMessageRenderer\",\n        cellRendererParams: {\n          clicked: function (field) {\n            alert(`${field} was clicked`);\n          }\n        },\n        filter: true,\n        width: 225\n      },\n      /*{\n        headerName: 'Child/Parent',\n        field: 'value',\n        cellRenderer: 'childMessageRenderer',\n        colId: 'params',\n        editable: false,\n        minWidth: 150,\n      }*/\n      {\n        headerName: 'Child/Parent',\n        field: 'value',\n        cellRenderer: \"childMessageRenderer\",\n        cellRendererParams: {\n          clicked: function (field) {\n            alert(`${field} was clicked`);\n          }\n        },\n        colId: 'params',\n        editable: false,\n        minWidth: 150\n      }]\n    };\n\n    this.onGridReady = params => {\n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi;\n      this.setState({\n        currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n        getPageSize: this.gridApi.paginationGetPageSize(),\n        totalPages: this.gridApi.paginationGetTotalPages()\n      });\n    };\n\n    this.updateSearchQuery = val => {\n      this.gridApi.setQuickFilter(val);\n    };\n\n    this.filterSize = val => {\n      if (this.gridApi) {\n        this.gridApi.paginationSetPageSize(Number(val));\n        this.setState({\n          currenPageSize: val,\n          getPageSize: val\n        });\n      }\n    };\n\n    this.methodFromParent = cell => {\n      alert('Parent Component Method from ' + cell + '!');\n    };\n  }\n\n  drop() {\n    alert(\"BUTTON CLICKEFD\");\n  }\n\n  componentDidMount() {\n    //fetch(\"http://localhost:8080/api/enddevices\").then(response => {\n    axios.get(\"http://localhost:8080/api/enddevices\").then(response => {\n      console.log(\"asda\");\n      console.log(response.data);\n      let rowData = response.data; //console.log(response.data)\n      //console.log(\"asda\")\n\n      JSON.stringify(rowData);\n      this.setState({\n        rowData\n      });\n    });\n  }\n\n  render() {\n    const {\n      rowData,\n      columnDefs,\n      defaultColDef,\n      frameworkComponents\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumbs, {\n      breadCrumbTitle: \"End Devices\",\n      breadCrumbParent: \"End Device\",\n      breadCrumbActive: \"End Devices\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      className: \"overflow-hidden agGrid-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"py-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, this.state.rowData === null ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ag-theme-material w-100 my-2 ag-grid-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n      className: \"p-1 ag-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DropdownToggle, {\n      tag: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }\n    }, this.gridApi ? this.state.currenPageSize : \"\" * this.state.getPageSize - (this.state.getPageSize - 1), \" \", \"-\", \" \", this.state.rowData.length - this.state.currenPageSize * this.state.getPageSize > 0 ? this.state.currenPageSize * this.state.getPageSize : this.state.rowData.length, \" \", \"of \", this.state.rowData.length, /*#__PURE__*/React.createElement(ChevronDown, {\n      className: \"ml-50\",\n      size: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(DropdownMenu, {\n      right: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      tag: \"div\",\n      onClick: () => this.filterSize(20),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, \"20\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      tag: \"div\",\n      onClick: () => this.filterSize(50),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, \"50\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      tag: \"div\",\n      onClick: () => this.filterSize(100),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }, \"100\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      tag: \"div\",\n      onClick: () => this.filterSize(134),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, \"134\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-between mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-input mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"search...\",\n      onChange: e => this.updateSearchQuery(e.target.value),\n      value: this.state.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"export-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button.Ripple, {\n      color: \"primary\",\n      onClick: () => this.gridApi.exportDataAsCsv(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 23\n      }\n    }, \"Export as CSV\")))), /*#__PURE__*/React.createElement(ContextLayout.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, context => /*#__PURE__*/React.createElement(AgGridReact, {\n      gridOptions: {},\n      rowSelection: \"multiple\",\n      defaultColDef: defaultColDef,\n      columnDefs: columnDefs,\n      rowData: rowData,\n      onGridReady: this.onGridReady,\n      colResizeDefault: \"shift\",\n      animateRows: true,\n      floatingFilter: true,\n      pagination: true,\n      paginationPageSize: this.state.paginationPageSize,\n      pivotPanelShow: \"always\",\n      enableRtl: context.state.direction === \"rtl\",\n      frameworkComponents: frameworkComponents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }))))));\n  }\n\n}\n\nexport default AggridTable;","map":{"version":3,"sources":["/home/mustafaakgul/Desktop/LoRa React/src/views/tables/aggrid/Aggrid4enddevices.js"],"names":["React","Card","CardBody","Input","Button","UncontrolledDropdown","DropdownMenu","DropdownItem","DropdownToggle","AgGridReact","ContextLayout","ChevronDown","axios","Breadcrumbs","ChildMessageRenderer","AggridTable","Component","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","frameworkComponents","childMessageRenderer","columnDefs","headerName","field","width","filter","checkboxSelection","headerCheckboxSelectionFilteredOnly","headerCheckboxSelection","pinned","window","innerWidth","cellRenderer","cellRendererParams","clicked","alert","colId","minWidth","onGridReady","params","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","methodFromParent","cell","drop","componentDidMount","get","then","response","console","log","data","JSON","stringify","render","length","e","target","value","exportDataAsCsv","context","direction"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardBody,\n  Input,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { AgGridReact } from \"ag-grid-react\"\nimport { ContextLayout } from \"../../../utility/context/Layout\"\nimport { ChevronDown } from \"react-feather\"\nimport axios from \"axios\"\n\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\"\n\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\n\nimport ChildMessageRenderer from './childMessageRenderer.jsx';\n\nclass AggridTable extends React.Component {\n\n  state = {\n    rowData: null,\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true\n    },\n    frameworkComponents: {\n      childMessageRenderer: ChildMessageRenderer\n    },\n    columnDefs: [\n      {\n        headerName: \"Data\",\n        field: \"lastValue\",\n        width: 225,\n        filter: true,\n        checkboxSelection: true,\n        headerCheckboxSelectionFilteredOnly: true,\n        headerCheckboxSelection: true\n      },\n      {\n        headerName: \"RSSI\",\n        field: \"rssi\",\n        filter: true,\n        width: 150\n      },\n      {\n        headerName: \"End Device Name\",\n        field: \"endDeviceName\",\n        filter: true,\n        width: 300,\n        pinned: window.innerWidth > 992 ? \"left\" : false\n      },\n      {\n        headerName: \"SNR\",\n        field: \"snr\",\n        filter: true,\n        width: 150\n      },\n      {\n        headerName: \"Communication Status\",\n        field: \"status\",\n        filter: true,\n        width: 300\n      },\n      {\n        headerName: \"Device EUI\",\n        field: \"dev_eui\",\n        cellRenderer: \"childMessageRenderer\",\n        cellRendererParams: {\n          clicked: function(field) {\n            alert(`${field} was clicked`);\n          },\n        },\n        filter: true,\n        width: 225\n      },\n      /*{\n        headerName: 'Child/Parent',\n        field: 'value',\n        cellRenderer: 'childMessageRenderer',\n        colId: 'params',\n        editable: false,\n        minWidth: 150,\n      }*/\n      {\n        headerName: 'Child/Parent',\n        field: 'value',\n        cellRenderer: \"childMessageRenderer\",\n        cellRendererParams: {\n          clicked: function(field) {\n            alert(`${field} was clicked`);\n          },\n        },\n        colId: 'params',\n        editable: false,\n        minWidth: 150,\n      }\n    ],\n  }\n\n  drop() {\n    alert(\"BUTTON CLICKEFD\");\n}\n\n  componentDidMount() {\n    //fetch(\"http://localhost:8080/api/enddevices\").then(response => {\n    axios.get(\"http://localhost:8080/api/enddevices\").then(response => {\n      console.log(\"asda\")\n      console.log(response.data)\n      let rowData = response.data\n      //console.log(response.data)\n      //console.log(\"asda\")\n      JSON.stringify(rowData)\n      this.setState({ rowData })\n    })\n  }\n\n  onGridReady = params => {\n    this.gridApi = params.api\n    this.gridColumnApi = params.columnApi\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages()\n    })\n  }\n\n  updateSearchQuery = val => {\n    this.gridApi.setQuickFilter(val)\n  }\n\n  filterSize = val => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val))\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val\n      })\n    }\n  }\n\n  methodFromParent = (cell) => {\n    alert('Parent Component Method from ' + cell + '!');\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef, frameworkComponents } = this.state\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"End Devices\"\n          breadCrumbParent=\"End Device\"\n          breadCrumbActive=\"End Devices\"\n        />\n        <Card className=\"overflow-hidden agGrid-card\">\n          <CardBody className=\"py-0\">\n            {this.state.rowData === null ? null : (\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                  <div className=\"mb-1\">\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                      <DropdownToggle tag=\"div\">\n                        {this.gridApi\n                          ? this.state.currenPageSize\n                          : \"\" * this.state.getPageSize -\n                            (this.state.getPageSize - 1)}{\" \"}\n                        -{\" \"}\n                        {this.state.rowData.length -\n                          this.state.currenPageSize * this.state.getPageSize >\n                        0\n                          ? this.state.currenPageSize * this.state.getPageSize\n                          : this.state.rowData.length}{\" \"}\n                        of {this.state.rowData.length}\n                        <ChevronDown className=\"ml-50\" size={15} />\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(20)}\n                        >\n                          20\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(50)}\n                        >\n                          50\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(100)}\n                        >\n                          100\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(134)}\n                        >\n                          134\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div>\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                    <div className=\"table-input mr-1\">\n                      <Input\n                        placeholder=\"search...\"\n                        onChange={e => this.updateSearchQuery(e.target.value)}\n                        value={this.state.value}\n                      />\n                    </div>\n                    <div className=\"export-btn\">\n                      <Button.Ripple\n                        color=\"primary\"\n                        onClick={() => this.gridApi.exportDataAsCsv()}\n                      >\n                        Export as CSV\n                      </Button.Ripple>\n                    </div>\n                  </div>\n                </div>\n                <ContextLayout.Consumer>\n                  {context => (\n                    <AgGridReact\n                      gridOptions={{}}\n                      rowSelection=\"multiple\"\n                      defaultColDef={defaultColDef}\n                      columnDefs={columnDefs}\n                      rowData={rowData}\n                      onGridReady={this.onGridReady}\n                      colResizeDefault={\"shift\"}\n                      animateRows={true}\n                      floatingFilter={true}\n                      pagination={true}\n                      paginationPageSize={this.state.paginationPageSize}\n                      pivotPanelShow=\"always\"\n                      enableRtl={context.state.direction === \"rtl\"}\n                      frameworkComponents={frameworkComponents}\n                    />\n                  )}\n                </ContextLayout.Consumer>\n              </div>\n            )}\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AggridTable\n"]},"metadata":{},"sourceType":"module"}