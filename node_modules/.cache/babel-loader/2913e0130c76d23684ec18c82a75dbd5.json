{"ast":null,"code":"var _jsxFileName = \"/home/mustafaakgul/Desktop/LoRa React/src/views/pages/authentication/register/RegisterJWT.js\";\nimport React from \"react\";\nimport { Form, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\nimport { Check } from \"react-feather\";\nimport { connect } from \"react-redux\";\nimport { signupWithJWT } from \"../../../../redux/actions/auth/registerActions\";\nimport { history } from \"../../../../history\";\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nclass RegisterJWT extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      name: \"\",\n      confirmPass: \"\"\n    };\n\n    this.handleRegister = e => {\n      e.preventDefault();\n      this.props.signupWithJWT(this.state.email, this.state.password, this.state.name);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      action: \"/\",\n      onSubmit: this.handleRegister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Name\",\n      required: true,\n      value: this.state.name,\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      placeholder: \"Email\",\n      required: true,\n      value: this.state.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Email\")), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      placeholder: \"Password\",\n      required: true,\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Password\")), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      required: true,\n      value: this.state.confirmPass,\n      onChange: e => this.setState({\n        confirmPass: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Confirm Password\")), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      icon: /*#__PURE__*/React.createElement(Check, {\n        className: \"vx-icon\",\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      }),\n      label: \" I accept the terms & conditions.\",\n      defaultChecked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button.Ripple, {\n      color: \"primary\",\n      outline: true,\n      onClick: () => {\n        history.push(\"/pages/login\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Button.Ripple, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Register\")));\n  }\n\n}\n/*const mapStateToProps = state => {\n  return {\n    values: state.auth.register\n  }\n}\nexport default connect(mapStateToProps, { signupWithJWT })(RegisterJWT)*/\n\n\nconst WrappedRegisterJWT = RegisterJWT;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegisterJWT);","map":{"version":3,"sources":["/home/mustafaakgul/Desktop/LoRa React/src/views/pages/authentication/register/RegisterJWT.js"],"names":["React","Form","FormGroup","Input","Label","Button","Checkbox","Check","connect","signupWithJWT","history","NavLink","actions","RegisterJWT","Component","state","email","password","name","confirmPass","handleRegister","e","preventDefault","props","render","setState","target","value","push","WrappedRegisterJWT","mapStateToProps","loading","error","mapDispatchToProps","dispatch","onAuth","username","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Form, FormGroup, Input, Label, Button } from \"reactstrap\"\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport { Check } from \"react-feather\"\nimport { connect } from \"react-redux\"\nimport { signupWithJWT } from \"../../../../redux/actions/auth/registerActions\"\nimport { history } from \"../../../../history\"\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nclass RegisterJWT extends React.Component {\n\n  state = {\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    confirmPass: \"\"\n  }\n\n  handleRegister = e => {\n    e.preventDefault()\n    this.props.signupWithJWT(\n      this.state.email,\n      this.state.password,\n      this.state.name\n    )\n  }\n\n  render() {\n    return (\n      <Form action=\"/\" onSubmit={this.handleRegister}>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"text\"\n            placeholder=\"Name\"\n            required\n            value={this.state.name}\n            onChange={e => this.setState({ name: e.target.value })}\n          />\n          <Label>Name</Label>\n        </FormGroup>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"email\"\n            placeholder=\"Email\"\n            required\n            value={this.state.email}\n            onChange={e => this.setState({ email: e.target.value })}\n          />\n          <Label>Email</Label>\n        </FormGroup>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            value={this.state.password}\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <Label>Password</Label>\n        </FormGroup>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            required\n            value={this.state.confirmPass}\n            onChange={e => this.setState({ confirmPass: e.target.value })}\n          />\n          <Label>Confirm Password</Label>\n        </FormGroup>\n        <FormGroup>\n          <Checkbox\n            color=\"primary\"\n            icon={<Check className=\"vx-icon\" size={16} />}\n            label=\" I accept the terms & conditions.\"\n            defaultChecked={true}\n          />\n        </FormGroup>\n        <div className=\"d-flex justify-content-between\">\n          <Button.Ripple\n            color=\"primary\"\n            outline\n            onClick={() => {\n              history.push(\"/pages/login\")\n            }}\n          >\n            Login\n          </Button.Ripple>\n          <Button.Ripple color=\"primary\" type=\"submit\">\n            Register\n          </Button.Ripple>\n        </div>\n      </Form>\n    )\n  }\n}\n/*const mapStateToProps = state => {\n  return {\n    values: state.auth.register\n  }\n}\nexport default connect(mapStateToProps, { signupWithJWT })(RegisterJWT)*/\n\nconst WrappedRegisterJWT = RegisterJWT;\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegisterJWT);"]},"metadata":{},"sourceType":"module"}